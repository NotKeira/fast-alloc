name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [ Debug, Release ]

    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Run Tests
        working-directory: build
        run: ctest -C ${{ matrix.build_type }} --output-on-failure

      - name: Run Benchmarks (Release only)
        if: matrix.build_type == 'Release'
        working-directory: build
        run: |
          .\Release\alloc_benchmarks.exe --benchmark_min_time=0.1

  build-linux:
    runs-on: self-hosted
    strategy:
      matrix:
        build_type: [ Debug, Release ]
        compiler:
          - { cc: gcc, cxx: g++ }
          - { cc: clang, cxx: clang++ }

    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        env:
          CC: ${{ matrix.compiler.cc }}
          CXX: ${{ matrix.compiler.cxx }}
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: cmake --build build

      - name: Run Tests
        working-directory: build
        run: ctest --output-on-failure

      - name: Run Benchmarks (Release only)
        if: matrix.build_type == 'Release'
        working-directory: build
        run: ./alloc_benchmarks --benchmark_min_time=0.1

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        build_type: [ Debug, Release ]

    steps:
      - uses: actions/checkout@v5

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: cmake --build build

      - name: Run Tests
        working-directory: build
        run: ctest --output-on-failure

      - name: Run Benchmarks (Release only)
        if: matrix.build_type == 'Release'
        working-directory: build
        run: ./alloc_benchmarks --benchmark_min_time=0.1
  sanitisers:
    runs-on: self-hosted
    strategy:
      matrix:
        sanitiser: [ address, thread, undefined ]
    steps:
      - uses: actions/checkout@v4

      - name: Configure with Sanitiser
        env:
          CC: clang
          CXX: clang++
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_CXX_FLAGS="-fsanitize=${{ matrix.sanitiser }} -fno-omit-frame-pointer -g" \
            -DCMAKE_EXE_LINKER_FLAGS="-fsanitize=${{ matrix.sanitiser }}"

      - name: Build
        run: cmake --build build

      - name: Run Tests
        working-directory: build
        env:
          ASAN_OPTIONS: detect_leaks=1
          TSAN_OPTIONS: second_deadlock_stack=1
        run: ctest --output-on-failure